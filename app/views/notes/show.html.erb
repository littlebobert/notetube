<div class="container2" data-controller="transcript" data-transcript-note-id-value="<%= @note.id %>">
  <div id="column1">
    <div data-transcript-target="playerOrIframe">
      <div id="player"></div>
    </div>

    <div class="mt-2"><h4><%= @note.title %></h4></div>

    <div class = "content-wrapper" data-controller="tags">
    <div class = "left-content">

      <div class="text-muted text-nowrap"><%= number_with_delimiter(@note.view_count)%> views | <%= @note.published_at.strftime("%b %d, %Y") %> <br> <i class="fa-solid fa-user"></i> <%= @note.channel_name %>
      </div>

    <div data-tags-target="tagContainer" class = "<%= "d-none" unless @note.is_bookmarked? %>" id="tagform">
      <strong>Tags:</strong>
      <%= @note.tag_list.join(", ") %>
      <%= render "tag_form" %>
    </div>

    </div>

    <div class = "right-content">
      <%= render "bookmark_button", note: @note %>

      <% if params[:show] == "notes" || params[:show].nil? %>
        <strong class="btn-icon" data-controller="tooltip" data-bs-toggle="tooltip" data-bs-position="bottom" title="Generate PDF"><i onclick="printElement(document.getElementById('notes-or-transcript'));" class="fa-solid fa-file-pdf"></i> </strong>
        <% end %>
        <strong class="btn-icon" data-controller="tooltip" data-bs-toggle="tooltip" data-bs-position="bottom" title="Copy"><i class="fa-solid fa-copy" onclick="copyElement(document.getElementById('notes-or-transcript'))"></i></strong>
        <% if params[:mode].nil? %>
          <%= link_to note_path(@note, :mode => "edit"), data: { turbo: "false" } do %>
            <strong class="btn-icon" data-controller="tooltip" data-bs-toggle="tooltip" data-bs-position="bottom" title="Edit"><i class="fa-solid fa-pen-to-square"></i></strong>
          <% end %>
        <% end %>


    </div>
    </div>

    <hr>

    <div class="mt-3" data-controller="read-more" data-read-more-more-text-value="Read more" data-read-more-less-text-value="Read less" data-spy="scroll" data-target="desc" id="desc-scroll">
      <p class="my-content" data-read-more-target="content" id="desc">
        <%= @note.video_description %>
      </p>

      <button data-action="read-more#toggle" class="btn btn-light">Read more</button>
    </div>
  </div>

  <div id = "column2" data-spy="scroll" data-target="#notes">
    <ul class="list-inline tabs-underlined mt-3" id="notes">
      <li>
        <%= link_to "Notes", note_path(@note, :show => "notes"), class: "tab-underlined #{params[:show] == "notes" || params[:show].nil? ? "active" : ""}", data: { turbo: "false", transcript_target: "notesTab", action: "click->transcript#switchToNotes", turbo: "false" } %>
      </li>
      <li>
        <%= link_to "Transcript", note_path(@note, :show => "transcript"), class: "tab-underlined #{params[:show] == "transcript" ? "active" : ""}", data: { turbo: "false", action: "click->transcript#fetch", transcript_target: "transcriptTab" } %>
      </li>
    </ul>
      <div>
        <div id="notes-or-transcript" data-transcript-target="content">
          <% if params[:show] == "notes" || params[:show].nil? %>
            <% if params[:mode] == "edit" %>
              <%= simple_form_for @note do |f| %>
                <%= f.submit label: "Save", class: "btn btn-primary mb-3 mt-3" %>
                <%= f.text_area :memo_html, class: "tinymce", rows: 40, cols: 120 %>
              <% end %>
              <%= tinymce %>
            <% else %>
              <%= raw(@note.memo_html) %>
            <% end %>
          <% else %>
            <% @timestamped_transcript.each do |timestamped| %><span class="caption" onclick="jumpTo(<%= timestamped[:start_time] %>)" data-start-time="<%= timestamped[:start_time] %>" data-duration="<%= timestamped[:duration] %>"><%= Rails::Html::FullSanitizer.new.sanitize(timestamped[:caption]) %></span> <% end %>
          <% end %>
        </div>
      </div>
  </div>
</div>


<script>
// This code loads the YouTube IFrame Player API code asynchronously.
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// This function creates an <iframe> (and YouTube player)
// after the API code downloads.
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player('player', {
    height: '390',
    width: '640',
    videoId: '<%= @video_id %>',
    playerVars: {
      'playsinline': 1
    },
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}

// The API will call this function when the video player is ready.
function onPlayerReady(event) {

}

// The API calls this function when the player's state changes.
var stopped = true;
function onPlayerStateChange(event) {
  stopped = event.data != 1;
  setInterval(() => {
    if (stopped) {
      return;
    }
    captions = document.getElementsByClassName("caption");
    Array.from(captions).forEach(function(caption) {
      if (player.getCurrentTime() > Number(caption.dataset.startTime) && player.getCurrentTime() < Number(caption.dataset.startTime) + Number(caption.dataset.duration)) {
        caption.classList.add("current-caption");
      } else {
        caption.classList.remove("current-caption");
      }
    })
  }, 1000)
}

function jumpTo(startTime) {
  player.seekTo(startTime, true);
}

function copyElement(element) {
  var selection = window.getSelection();
  var range = document.createRange();
  range.setStartBefore(element);
  range.setEndAfter(element);
  selection.removeAllRanges();
  selection.addRange(range);

  document.execCommand('copy');

  selection.removeAllRanges();
}

function changeText(copy_text) {
  copy_text.textContent = 'Copied!'
  setTimeout(() => {
    copy_text.textContent = 'Copy';
  }, 2000);
}

function printElement(element) {
    var mywindow = window.open('', 'PRINT', 'height=400,width=600');

    mywindow.document.write('<html><head><title>' + document.title  + '</title>');
    mywindow.document.write('</head><body >');
    mywindow.document.write('<h1>' + document.title  + '</h1>');
    mywindow.document.write(element.innerHTML);
    mywindow.document.write('</body></html>');

    mywindow.document.close(); // necessary for IE >= 10
    mywindow.focus(); // necessary for IE >= 10*/

    mywindow.print();
    mywindow.close();
}
</script>
